/*–ó–∞–≤–¥–∞–Ω–Ω—è 1:
‚Äî –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü–∏—é arrCopy(arr), —è–∫–∞ –∫–æ–ø—ñ—î—é –≤—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–µ—Ä–µ–¥–∞–Ω–æ–≥–æ –º–∞—Å–∏–≤—É —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –Ω–µ –∑–º—ñ–Ω—é—é—á–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª arr.
- const arr1 = arrCopy([1,2,3]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [1,2,3].
- const arr2 = arrCopy([1,2,3,[10,20]]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [1,2,3,[10,20]].

function arrCopy(arr) {
    let newArr= [];
    for (const index in arr) {
        newArr[index] = arr[index];
    }  
    return newArr;
}
const arr1 = arrCopy([1,2,3]);
const arr2 = arrCopy([1,2,3,[10,20]]);
console.log(arr1);
console.log(arr2);
*/
/*
üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 2:
‚Äî –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é arrToString(arr), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ arr –∑ —á–∏—Å–µ–ª —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –≤–∂–µ –º–∞—Å–∏–≤ –∑ —Å—Ç—Ä—ñ—á–∫–∞–º–∏:
- const arr1 = arrToString([1,2,3]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [‚Äò1‚Äô,‚Äò2‚Äô,‚Äò3‚Äô]. 
- const arr2 = arrToString([10,200,3333]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [‚Äò10‚Äô,‚Äò200‚Äô,‚Äò3333‚Äô].

function arrToString(arr) {
    let newArr = [];
    for (let i = 0; i < arr.length; i++) {
        newArr[i] = "" + arr[i];
    }
    return newArr;
}
const arr1 = arrToString([1, 2, 3]);
const arr2 = arrToString([10,200,3333]);
console.log(arr1);
console.log(arr1);

/*
üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 3:
‚Äî –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getLength(arr), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ arr –∑ —Å—Ç—Ä—ñ—á–æ–∫ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –¥–æ–≤–∂–∏–Ω–æ—é –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —Ç–∏—Ö —Å—Ç—Ä—ñ—á–æ–∫:
- const arr1 = getLength([‚ÄòIvan‚Äô,‚ÄòPavlo‚Äô,‚ÄòIra‚Äô]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [4,5,3]. 
- const arr2 = getLength([‚ÄòOleksiy‚Äô,‚ÄòAndriana‚Äô]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [7,8].

function getLength(arr) {
    let newArr = [];
    for (let i = 0; i < arr.length; i++) {
        newArr[i] = arr[i].length;
    }
    return newArr;
}
const arr1 = getLength(['Ivan', 'Pavlo', 'Ira']);
const arr2 = getLength(['Oleksiy','Andriana'])
console.log(arr1);
console.log(arr2);

/*
üëâ –ó–∞–≤–¥–∞–Ω–Ω—è 4:
‚Äî –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é removeDuplicates(arr), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ arr –∑ —Å—Ç—Ä—ñ—á–æ–∫ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –¥–µ –≤–∏–∫–ª—é—á–µ–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —â–æ –ø–æ–≤—Ç–æ—Ä—é—é—Ç—å—Å—è –∑ –º–∞—Å–∏–≤—É arr(—ñ–≥–Ω–æ—Ä—É–≤–∞—Ç–∏ —á—É—Ç–ª–∏–≤—ñ—Å—Ç—å –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É):
- const arr1 = removeDuplicates([‚Äòhtml‚Äô,‚Äòcss‚Äô,‚Äòhtml‚Äô,‚Äòjs‚Äô]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [‚Äòhtml‚Äô,‚Äòcss‚Äô,‚Äòjs‚Äô]. 
- const arr2 = removeDuplicates([‚Äòhtml‚Äô,‚Äòcss‚Äô,‚Äòjs‚Äô,‚Äòhtml‚Äô,‚Äòjs‚Äô,‚Äòpython‚Äô,‚Äòjs‚Äô,‚Äòscss‚Äô]) ‚Äì –∑–∞–ø–∏—à–µ –≤ –∑–º—ñ–Ω–Ω—É –º–∞—Å–∏–≤ [‚Äòhtml‚Äô,‚Äòcss‚Äô,‚Äòjs‚Äô,‚Äòpython‚Äô,‚Äòscss‚Äô]). 
*/
function removeDuplicates(arr) {
    let newArr = [];
    for (let index in arr) {
        if (!newArr.includes(index.toLowerCase())) {
            newArr.push(index);
        }
    }
    return newArr;
}
const arr1 = removeDuplicates(['html', 'css', 'html', 'js']);
const arr2 = removeDuplicates(['html', 'css', 'js', 'html', 'js', 'python', 'js', 'scss']);
console.log(arr1);
console.log(arr2);